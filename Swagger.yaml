---
openapi: 3.0.3
info:
  title: Swagger Bicicletario - OpenAPI 3.0
  description: |-
    O documento descreve a API utilizada em um sistema de bicicletário
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://petstore3.swagger.io/api/v3
tags:

- name: Ciclista
  description: Operações sobre o usuário
- name: Administradora CC
  description: Operações sobre o cartão
- name: Administraçao
  description: Operações sobre a Administraçao
  
paths:
  /confirmar-email:
    post:
      tags:
      - Ciclista
      summary: Confirma um endereço de e-mail
      description: Envia email para o ciclista para validar o email.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateemail_body'
        required: true
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  
  /ativar-usuario:
    post:
      tags:
      - Ciclista
      summary: Ativar cadastro do ciclista
      description: Muda status do Ciclista para ativo.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateemail_body'
        required: true
      responses:
        "200":
          description: Usuário ativo com sucesso!
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  
                
  /registrar:
    post:
      tags:
      - Ciclista
      summary: Cadastra o ciclista
      description: Faz o cadastro do ciclista.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ciclista'
        required: true
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ciclista'
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    put:
      tags:
      - Ciclista
      summary: Alterar dados do ciclista
      description: Altera os dados do ciclista
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ciclista'
        required: true
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ciclista'
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
                
  /deletar:
    put:
      tags:
      - Ciclista
      summary: Remove o ciclista do sistema
      description: Faz a remoção do ciclista do sistema
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
                
  /validar-cartao:
    post:
      tags:
      - Administradora CC
      summary: Valida um cartão do ciclista
      description: Faz a validação do cartão de pagamento do ciclista
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cartao_credito'
        required: true
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /atualizar-cartao:
    put:
      tags:
      - Administradora CC
      summary: Altera dados do cartão
      description: Altera dados do cartão do ciclista
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cartao_credito'
        required: true
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
                
  /funcionarios:
    get:
      tags:
      - Funcionario
      summary: Obter lista de funcionários
      operationId: obterFuncionarios
      responses:
        '200':
          description: Lista de funcionários obtida com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Funcionario'
    post:
      tags:
      - Funcionario
      summary: Registrar um novo funcionário
      operationId: registrarFuncionario
      requestBody:
        description: Dados do funcionário a ser registrado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Funcionario'
      responses:
        '201':
          description: Funcionário registrado com sucesso
  /funcionarios/{id}:
    put:
      tags:
      - Funcionario
      summary: Atualizar dados de um funcionário
      operationId: atualizarFuncionario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do funcionário a ser atualizado
      requestBody:
        description: Dados atualizados do funcionário
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Funcionario'
      responses:
        '200':
          description: Funcionário atualizado com sucesso
    delete:
      tags:
      - Funcionario
      summary: Remover um funcionário
      operationId: removerFuncionario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do funcionário a ser removido
      responses:
        '200':
          description: Funcionário removido com sucesso
            
  /funcionarios/validar:
    post:
      tags:
      - Funcionario
      summary: Validar dados de um funcionário
      operationId: validarDadosFuncionario
      requestBody:
        description: Dados do funcionário a serem validados
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Funcionario'
      responses:
        '200':
          description: Dados do funcionário são válidos
        '400':
          description: Dados do funcionário são inválidos
  /tranca:
    post:
      tags:
        - Tranca
      summary: Incluir uma nova tranca ou uma tranca reparada na rede de totens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tranca'
      responses:
        '200':
          description: Tranca incluída com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrancaResponse'
        '400':
          description: Número da tranca inválido
        '500':
          description: Erro no envio do email

  /trancas/{idTranca}:
    get:
      tags:
        - Tranca
      summary: Obter informações de uma tranca
      description: Retorna os dados de uma tranca específica baseada no seu ID.
      parameters:
        - name: idTranca
          in: path
          required: true
          description: ID da tranca a ser obtida.
  
          schema:
                $ref: '#/components/schemas/TrancaResponse'
      responses:
        "200":
          description: Operação bem-sucedida

  /tranca/{numeroTranca}:
    put:
      tags:
        - Tranca
      summary: Alterar o status da tranca
      parameters:
        - name: numeroTranca
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusTranca'
      responses:
        '200':
          description: Status da tranca alterado com sucesso
        '400':
          description: Número da tranca inválido
  /valida-tranca:
    post:
      tags:
        - Tranca
      summary: Validar o número da tranca
      operationId: validarNumeroTranca
      requestBody:
        description: Dados da tranca a serem validados
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tranca'
      responses:
        '200':
          description: Número da tranca é válido
        '400':
          description: Número da tranca é inválido
  /cobranca-taxas-atrasadas:
    post:
      tags:
        - Cobranca
      summary: Realiza a cobrança de taxas atrasadas para ciclistas em atraso
      responses:
        '200':
          description: Cobranças realizadas com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CobrancaResponse'
        '500':
          description: Erro na realização das cobranças
  
  /lista-ciclistas-atraso-cobranca:
    get:
      tags:
        - Cobranca
      summary: Identifica ciclistas em atraso e suas respectivas cobranças
      responses:
        '200':
          description: Lista de ciclistas em atraso e suas cobranças
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListaCiclistaAtrasoCobranca'
        '500':
          description: Erro na busca pelos ciclistas em atraso  
  /valida-bicicleta:
    post:
      tags:
        - Bicicletas
      summary: Validar bicicleta
      description: Valida os dados de uma bicicleta específica.
      requestBody:
        description: Dados da bicicleta para validação
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bicicleta'
      responses:
        "200":
          description: Bicicleta validada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidacaoResponse'
        "400":
          description: Dados da bicicleta inválidos
        "500":
          description: Erro interno do servidor
          
  /altera-status-bicicleta/{idBicicleta}:
    put:
      tags:
        - Bicicleta
      summary: Alterar status da bicicleta
      description: Altera o status de uma bicicleta específica baseada no ID fornecido.
      parameters:
        - name: idBicicleta
          in: path
          description: ID da bicicleta a ter o status alterado
          required: true
          schema:
            type: string
      requestBody:
        description: Novo status da bicicleta
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusBicicleta'
      responses:
        "200":
          description: Status da bicicleta alterado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BicicletaResponse'
        "400":
          description: Dados inválidos fornecidos
        "404":
          description: Bicicleta não encontrada
        "500":
          description: Erro interno do servidor
components:
  schemas:
    Ciclista:
      type: object
      properties:
        nome:
          type: string
        brasileiro:
          type: boolean
        cpf:
          type: string
        passaporte:
          $ref: '#/components/schemas/Ciclista_passaporte'
        cartao:
          $ref: '#/components/schemas/cartao_credito'
        senha:
          type: string
        fotoDocumento:
          type: string
        
    validateemail_body:
      type: object
      properties:
        email:
          type: string
          format: email
    inline_response_200:
      type: object
      properties:
        isValid:
          type: boolean
        message:
          type: string
    inline_response_400:
      type: object
      properties:
        message:
          type: string
    Ciclista_passaporte:
      type: object
      properties:
        numero:
          type: string
        dataValidade:
          type: string
        pais:
          type: string
    cartao_credito:
      type: object
      properties:
        numero:
          type: string
        dataValidade:
          type: string
          format: date
        codigo:
          type: string
        nomeDono:
          type: string
    Tranca:
      type: object
      properties:
        numeroTranca:
          type: string
        matriculaReparador:
          type: string
      required:
        - numeroTranca
        - matriculaReparador
    
    TrancaResponse:
      type: object
      properties:
        numeroTranca:
          type: string
        matriculaReparador:
          type: string
        dataHoraInsercao:
          type: string
          format: date-time
        status:
          type: string
        mensagem:
          type: string
    
    StatusTranca:
      type: object
      properties:
        status:
          type: string
      required:
        - status

    RetirarTranca:
      type: object
      properties:
        numeroTranca:
          type: string
          description: Número da tranca que deve ter sido cadastrado previamente no sistema.
        matriculaReparador:
          type: string
          description: Matrícula do reparador.
        tipoRetirada:
          type: string
          enum: ["reparo", "aposentadoria"]
          description: Tipo de retirada (reparo ou aposentadoria).
      required:
        - numeroTranca
        - matriculaReparador
        - tipoRetirada

    RetirarTrancaResponse:
      type: object
      properties:
        numeroTranca:
          type: string
          description: Número da tranca retirada.
        matriculaReparador:
          type: string
          description: Matrícula do reparador que retirou a tranca.
        dataHoraRetirada:
          type: string
          format: date-time
          description: Data e hora da retirada da tranca do totem.
        status:
          type: string
          description: Status atual da tranca.
        mensagem:
          type: string
          description: Mensagem informativa sobre a retirada da tranca.
      required:
        - numeroTranca
        - matriculaReparador
        - dataHoraRetirada
        - status

    CobrancaResponse:
      type: object
      properties:
        idCiclista:
          type: string
          description: Identificador do ciclista.
        dataHoraCobranca:
          type: string
          format: date-time
          description: Data e hora da realização da cobrança.
        valorCobrado:
          type: number
          format: float
          description: Valor extra do aluguel cobrado.
        cartaoUsado:
          type: string
          description: Dados do cartão de crédito utilizado para a cobrança.
        statusCobranca:
          type: string
          enum: ["Sucesso", "Erro"]
          description: Status da cobrança realizada.
        mensagem:
          type: string
          description: Mensagem informativa sobre a cobrança.
      required:
        - idCiclista
        - dataHoraCobranca
        - valorCobrado
        - cartaoUsado
        - statusCobranca
    ListaCiclistaAtrasoCobranca:
      type: object
      properties:
        idCiclista:
          type: string
          description: Identificador do ciclista.
        valorCobranca:
          type: number
          format: float
          description: Valor da cobrança em atraso.
      required:
        - idCiclista
        - valorCobranca
    NotificacaoCobrancaAtrasada:
      type: object
      properties:
        idCiclista:
          type: string
          description: Identificador do ciclista
        emailCiclista:
          type: string
          format: email
          description: E-mail do ciclista
        detalhesCobranca:
          type: string
          description: Detalhes da cobrança atrasada
      required:
        - idCiclista
        - emailCiclista
        - detalhesCobranca
    NotificacaoEmail:
      type: object
      properties:
        destinatario:
          type: string
          format: email
          description: Endereço de e-mail do destinatário
        assunto:
          type: string
          description: Assunto do e-mail
        corpo:
          type: string
          description: Corpo da mensagem de e-mail
      required:
        - destinatario
        - assunto
        - corpo
    Funcionario:
      type: object
      properties:
        id:
          type: integer
          description: ID do funcionário
        nome:
          type: string
          description: Nome do funcionário
        cargo:
          type: string
          description: Cargo do funcionário
        dataContratacao:
          type: string
          format: date
          description: Data de contratação do funcionário
    Bicicleta:
      type: object
      properties:
        numeroBicicleta:
          type: string
          description: Número único de identificação da bicicleta
        status:
          type: string
          description: Status atual da bicicleta
      required:
        - numeroBicicleta
        - status
    
    ValidacaoResponse:
      type: object
      properties:
        numeroBicicleta:
          type: string
        isValid:
          type: boolean
        mensagem:
          type: string
      required:
        - numeroBicicleta
        - isValid
        - mensagem
    StatusBicicleta:
      type: object
      properties:
        status:
          type: string
          description: Novo status da bicicleta
      required:
        - status
    
    BicicletaResponse:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        mensagem:
          type: string
      required:
        - id
        - status
        - mensagem